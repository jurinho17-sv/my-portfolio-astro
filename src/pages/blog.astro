---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import { getPageInfo } from '@/utils/page'

const { currentLang } = getPageInfo(Astro.url.pathname)
const posts = await getCollection('posts', ({ data }) => {
  return !data.draft && (data.lang === currentLang || data.lang === '')
})

// Sort posts by pin status and date
const sortedPosts = posts.sort((a, b) => {
  if (a.data.pin !== b.data.pin) {
    return b.data.pin - a.data.pin
  }
  return b.data.published.getTime() - a.data.published.getTime()
})

const siteTitle = 'Ju Ho Kim'
const siteDescription = 'Personal blog of Ju Ho Kim covering technology, programming, statistics, and life as a UC Berkeley student'
---

<Layout title={siteTitle} description={siteDescription}>
  <main class="main-container">
    <!-- Page Header -->
    <header class="mb-12 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-primary mb-4">
        Blog
      </h1>
      <p class="text-lg text-secondary max-w-2xl mx-auto leading-relaxed">
        Thoughts on technology, programming, statistics, and my journey as a UC Berkeley student 
        pursuing a career in Silicon Valley.
      </p>
    </header>

    <!-- Blog Posts -->
    {sortedPosts.length > 0 ? (
      <div class="space-y-8">
        {sortedPosts.map((post) => (
          <article class="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md hover:shadow-lg transition-shadow border border-gray-200 dark:border-gray-700">
            <div class="flex items-start justify-between gap-4 mb-4">
              <div class="flex-1">
                <h2 class="text-xl font-bold text-primary mb-2 hover:text-blue-600 transition-colors">
                  <a href={`/posts/${post.id}/`}>
                    {post.data.title}
                  </a>
                </h2>
                {post.data.description && (
                  <p class="text-secondary leading-relaxed mb-4">
                    {post.data.description}
                  </p>
                )}
              </div>
              {post.data.pin > 0 && (
                <div class="flex items-center gap-2 bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300 px-3 py-1 rounded-full text-sm font-medium">
                  üìå Pinned
                </div>
              )}
            </div>
            
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-4 text-sm text-gray-500">
                <time>
                  {post.data.published.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                {post.data.updated && (
                  <span class="text-xs">
                    Updated: {post.data.updated.toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </span>
                )}
              </div>
              
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.slice(0, 3).map((tag) => (
                    <span class="bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 px-2 py-1 text-xs rounded-md font-medium">
                      {tag}
                    </span>
                  ))}
                  {post.data.tags.length > 3 && (
                    <span class="bg-gray-100 dark:bg-gray-700 text-gray-500 px-2 py-1 text-xs rounded-md">
                      +{post.data.tags.length - 3}
                    </span>
                  )}
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="text-center py-16">
        <div class="text-6xl mb-4">üìù</div>
        <h2 class="text-xl font-medium text-secondary mb-2">No blog posts yet</h2>
        <p class="text-gray-500">Check back soon for new content!</p>
      </div>
    )}

    <!-- Call to Action -->
    <section class="mt-16 text-center bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-700 rounded-lg p-8">
      <h2 class="text-xl font-bold text-primary mb-4">
        Want to See My Work?
      </h2>
      <p class="text-secondary mb-6 max-w-lg mx-auto">
        Explore my projects to see practical applications of the concepts I write about.
      </p>
      <a 
        href="/projects/" 
        class="inline-flex items-center gap-2 bg-[#003262] text-white px-6 py-3 rounded-lg font-medium hover:bg-[#FDB515] hover:text-[#003262] transition-all duration-300"
      >
        View Projects
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </a>
    </section>
  </main>
</Layout>

<style>
.main-container {
  max-width: 4xl;
  margin: 0 auto;
  padding: 2rem 1rem;
}
</style>
