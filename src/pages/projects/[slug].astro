---
import { getCollection, type CollectionEntry, render } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import { formatDate } from '@/utils/date'

export async function getStaticPaths() {
  const allProjects = await getCollection('projects')
  
  return allProjects
    .filter(project => !project.data.draft)
    .map(project => ({
      params: { 
        slug: project.id
      },
      props: { project }
    }))
}

interface Props {
  project: CollectionEntry<'projects'>
}

const { project } = Astro.props
const { Content } = await render(project)

const title = project.data.title
const description = project.data.description
---

<Layout postTitle={title} postDescription={description}>
  <main class="uno-layout-container">
    <!-- Back to Projects -->
    <div class="mb-6">
      <a href="/projects/" class="text-3.5 c-secondary hover:c-primary transition-colors">
        ← Back to Projects
      </a>
    </div>

    <!-- Project Header -->
    <header class="mb-8">
      <h1 class="mb-4 text-8 font-bold c-primary lg:text-9">
        {project.data.title}
      </h1>
      
      <p class="mb-6 text-4 c-secondary leading-relaxed">
        {project.data.description}
      </p>

      <!-- Project Meta -->
      <div class="mb-6 space-y-3">
        <div class="flex items-center gap-2 text-3.5 c-secondary">
          <span class="font-semibold">Duration:</span>
          <span class="time-font">
            {formatDate(project.data.startDate, 'MMM YYYY')}
            {project.data.endDate ? ` - ${formatDate(project.data.endDate, 'MMM YYYY')}` : ' - Present'}
          </span>
        </div>

        {project.data.technologies && project.data.technologies.length > 0 && (
          <div class="flex items-start gap-2 text-3.5 c-secondary">
            <span class="font-semibold">Technologies:</span>
            <div class="flex flex-wrap gap-2">
              {project.data.technologies.map((tech) => (
                <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded text-3 c-primary">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        )}

        <div class="flex gap-4">
          {project.data.githubUrl && (
            <a 
              href={project.data.githubUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-3.5 c-secondary hover:c-primary transition-colors"
            >
              GitHub →
            </a>
          )}
          {project.data.liveUrl && (
            <a 
              href={project.data.liveUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-3.5 c-secondary hover:c-primary transition-colors"
            >
              Live Demo →
            </a>
          )}
        </div>
      </div>
    </header>

    <!-- Project Content -->
    <article class="prose prose-lg max-w-none">
      <Content />
    </article>
  </main>
</Layout>
