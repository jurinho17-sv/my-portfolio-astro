---
import type { CollectionEntry } from 'astro:content'
import { getCollection, render } from 'astro:content'
import Comment from '@/components/Comment/Index.astro'
import PostDate from '@/components/PostDate.astro'
import TagList from '@/components/TagList.astro'
import BackButton from '@/components/Widgets/BackButton.astro'
import TOC from '@/components/Widgets/TOC.astro'
import Layout from '@/layouts/Layout.astro'
import { checkPostSlugDuplication } from '@/utils/content'
import { getPostDescription } from '@/utils/description'

export async function getStaticPaths() {
  const posts = await getCollection('posts')

  // Check if there are duplicate post slugs
  const duplicates = await checkPostSlugDuplication(posts)
  if (duplicates.length > 0) {
    throw new Error(`Duplicate post slugs:\n${duplicates.join('\n')}`)
  }

  return posts
    .filter((post: CollectionEntry<'posts'>) => 
      import.meta.env.DEV || !post.data.draft
    )
    .map((post: CollectionEntry<'posts'>) => {
      const slug = post.data.abbrlink || post.id
      return {
        params: { posts_slug: `posts/${slug}/` },
        props: { post }
      }
    })
}

const { post } = Astro.props
const description = getPostDescription(post, 'meta')
const { Content, headings, remarkPluginFrontmatter } = await render(post)
---

<Layout
  postTitle={post.data.title}
  postDescription={description}
  postSlug={post.id}
>
  <article class="heti">
    <div class="relative">
      <!-- Go Back Button On Desktop -->
      <BackButton />
      <!-- Title -->
      <h1 class="post-title">
        <span
          transition:name={`post-${post.data.abbrlink || post.id}`}
          data-disable-theme-transition
        >
          {post.data.title}
        </span>
      </h1>
    </div>

    <!-- Date -->
    <div
      id="post-date"
      class="mb-17.2 block c-primary font-time"
      transition:name={`time-${post.data.abbrlink || post.id}`}
      data-disable-theme-transition
    >
      <PostDate
        date={post.data.publishDate}
        updatedDate={post.data.updatedDate}
        minutes={remarkPluginFrontmatter.minutes}
      />
    </div>
    <!-- TOC -->
    {post.data.toc && <TOC headings={headings} />}
    <!-- Content -->
    <div id="post-content">
      <Content />
      <!-- Copyright -->
      <div id="post-copyright" />
      <!-- Tag List -->
      {post.data.tags?.length > 0 && (
        <div class="mt-12.6 uno-decorative-line" />
        <TagList
          tags={post.data.tags}
        />
      )}
      <!-- Comment -->
      <Comment />
    </div>
  </article>
</Layout>
